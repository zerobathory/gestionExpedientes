<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Spatie\Permission\Traits\HasRoles;
use Illuminate\Database\Eloquent\Relations\HasMany;

/**
 * Class User
 * 
 * Representa la tabla de datos de los usuarios.
 * 
 * @namespace App\Models
 * @property string $nombre Nombre del usuario.
 * @property string $primer_apellido Apellido del usuario.
 * @property string $segundo_apellido apellido del usuario.
 * @property string $email Correo del usuario.
 * @property string $password contraseña del usuario.
 * 
 * @author Uriel Castillo
 */

class User extends Authenticatable
{
    /** @use HasFactory<\Database\Factories\UserFactory> */
    use HasFactory, Notifiable, HasRoles;

    /**
     * The attributes that are mass assignable.
     *
     * @var list<string>
     */
    protected $fillable = [
        'nombre',
        'primer_apellido',
        'segundo_apellido',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var list<string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }

    /**
   * Método que se encarga de hacer la relación uno a muchos con la tabla de expedientes para obtener la colección de cuáles expedientes hizo un usuario
   * 
   * @return Illuminate\Database\Eloquent\Relations\HasMany Retorna colección con los expedientes que generó el usuario.
   * 
   * 
   * 
   * @author Uriel Castillo
   */

    public function expedientes(): HasMany

    {

        return $this->hasMany(Expedientes::class,'id_usuario_registra', 'id');

    }
}
